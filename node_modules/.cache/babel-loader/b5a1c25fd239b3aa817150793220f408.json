{"ast":null,"code":"var _jsxFileName = \"/Users/marwa/frontend/trivia/trivia-app/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TOTAL_QUESTIONS = 3;\n\nfunction App() {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [questions, setQuestions] = useState([]);\n  const [number, setNumber] = useState(0);\n  const [userAnswers, setUserAnswers] = useState(0);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(true);\n  useEffect(() => {\n    fetch('questions.json').then(response => response.json()).then(question => {\n      setQuestions(question);\n    });\n  }, []);\n  console.log('hi' + questions[0]);\n\n  const start = () => {\n    setLoading(true);\n    setGameOver(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trivia\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to Trivia\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), gameOver || userAnswers === TOTAL_QUESTIONS ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"start\",\n        onClick: start,\n        children: \"Start Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"xRe5MSZpVAEYMGhan2KtNuLrvhM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/marwa/frontend/trivia/trivia-app/src/App.tsx"],"names":["React","useEffect","useState","TOTAL_QUESTIONS","App","loading","setLoading","questions","setQuestions","number","setNumber","userAnswers","setUserAnswers","score","setScore","gameOver","setGameOver","fetch","then","response","json","question","console","log","start"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,WAAP;;AAGA,MAAMC,eAAe,GAAG,CAAxB;;AAKA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAmB,EAAnB,CAA1C;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,IAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAChBgB,IAAAA,KAAK,CAAC,gBAAD,CAAL,CACEC,IADF,CACQC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADrB,EAEEF,IAFF,CAEQG,QAAD,IAAc;AACnBb,MAAAA,YAAY,CAACa,QAAD,CAAZ;AACA,KAJF;AAKA,GANS,EAMP,EANO,CAAT;AAQDC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAOhB,SAAS,CAAC,CAAD,CAA5B;;AACA,QAAMiB,KAAK,GAAG,MAAI;AACjBlB,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAU,IAAAA,WAAW,CAAC,KAAD,CAAX;AACA,GAHD;;AAMC,sBACE;AAAK,IAAA,SAAS,EAAE,KAAhB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAE,QAAhB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGD,QAAQ,IAAIJ,WAAW,KAAKR,eAA5B,gBACC;AAAQ,QAAA,SAAS,EAAC,OAAlB;AAA2B,QAAA,OAAO,EAAEqB,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,GAIG,IANN;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAtCQpB,G;;KAAAA,G;AAwCT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { IQuestion } from './models/IQuestion';\n\nconst TOTAL_QUESTIONS = 3;\n\n\n\n\nfunction App() {\n\n  const [loading, setLoading] = useState(false);\n  const [questions, setQuestions] = useState<Array<IQuestion>>([]);\n  const [number, setNumber] = useState(0);\n  const [userAnswers, setUserAnswers] = useState(0);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(true);\n\n  useEffect(() => {\n\t\tfetch('questions.json')\n\t\t\t.then((response) => response.json())\n\t\t\t.then((question) => {\n\t\t\t\tsetQuestions(question);\n\t\t\t});\n\t}, []);\n\n console.log('hi' + questions[0]);\n const start=  ()=>{\n  setLoading(true);\n  setGameOver(false);\n }\n\n\n  return (\n    <div className= \"App\"> \n      <div className= \"trivia\">\n        <h1>Welcome to Trivia</h1>\n        {gameOver || userAnswers === TOTAL_QUESTIONS ? (\n          <button className=\"start\"  onClick={start}>\n            Start Game\n          </button>\n        ) : null}\n\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}