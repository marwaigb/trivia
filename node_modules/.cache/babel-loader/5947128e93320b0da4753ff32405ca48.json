{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nexport const fetchTriviaCollectionAsync = createAsyncThunk('trivia/fetchCollection', async () => {\n  const response = await fetch('/questions.json');\n  return await response.json();\n});\nexport const triviaSlice = createSlice({\n  name: 'trivia',\n  initialState: {\n    items: [],\n    userAnwers: new Array(5),\n    index: 0\n  },\n  reducers: {\n    resetUserAnswer: state => {\n      state.userAnwers = new Array(5);\n    },\n    addUserAnswer: (state, action) => {\n      state.userAnwers[state.index] = action.payload;\n    },\n    changeIndex: (state, action) => {\n      state.index = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchTriviaCollectionAsync.fulfilled, (state, action) => {\n      state.items = action.payload;\n    });\n  }\n});\nexport const {\n  addUserAnswer,\n  changeIndex,\n  resetUserAnswer\n} = triviaSlice.actions;\nexport default triviaSlice.reducer;","map":{"version":3,"sources":["/Users/marwa/frontend/trivia/trivia-app/src/store/triviaSlice.ts"],"names":["createAsyncThunk","createSlice","fetchTriviaCollectionAsync","response","fetch","json","triviaSlice","name","initialState","items","userAnwers","Array","index","reducers","resetUserAnswer","state","addUserAnswer","action","payload","changeIndex","extraReducers","builder","addCase","fulfilled","actions","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA6D,kBAA7D;AAIA,OAAO,MAAMC,0BAA0B,GAAGF,gBAAgB,CACzD,wBADyD,EAEzD,YAAY;AACX,QAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAD,CAA5B;AACA,SAAO,MAAMD,QAAQ,CAACE,IAAT,EAAb;AACA,CALwD,CAAnD;AASP,OAAO,MAAMC,WAAW,GAAGL,WAAW,CAAC;AACnCM,EAAAA,IAAI,EAAE,QAD6B;AAEnCC,EAAAA,YAAY,EAAE;AACVC,IAAAA,KAAK,EAAE,EADG;AAGVC,IAAAA,UAAU,EAAE,IAAIC,KAAJ,CAAU,CAAV,CAHF;AAIVC,IAAAA,KAAK,EAAE;AAJG,GAFqB;AAQnCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,eAAe,EAAGC,KAAD,IAAW;AACxBA,MAAAA,KAAK,CAACL,UAAN,GAAmB,IAAIC,KAAJ,CAAU,CAAV,CAAnB;AACH,KAHK;AAKNK,IAAAA,aAAa,EAAE,CAACD,KAAD,EAAQE,MAAR,KAA0C;AACrDF,MAAAA,KAAK,CAACL,UAAN,CAAiBK,KAAK,CAACH,KAAvB,IAAgCK,MAAM,CAACC,OAAvC;AACH,KAPK;AAQNC,IAAAA,WAAW,EAAE,CAACJ,KAAD,EAAQE,MAAR,KAA0C;AACnDF,MAAAA,KAAK,CAACH,KAAN,GAAcK,MAAM,CAACC,OAArB;AACH;AAVK,GARyB;AAoBnCE,EAAAA,aAAa,EAAGC,OAAD,IAAa;AACxBA,IAAAA,OAAO,CACFC,OADL,CAEQpB,0BAA0B,CAACqB,SAFnC,EAGQ,CAACR,KAAD,EAAQE,MAAR,KAA+C;AAC3CF,MAAAA,KAAK,CAACN,KAAN,GAAcQ,MAAM,CAACC,OAArB;AACH,KALT;AAOH;AA5BkC,CAAD,CAA/B;AA8BP,OAAQ,MAAM;AAACF,EAAAA,aAAD;AAAgBG,EAAAA,WAAhB;AAA6BL,EAAAA;AAA7B,IAAgDR,WAAW,CAACkB,OAAlE;AACR,eAAelB,WAAW,CAACmB,OAA3B","sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { IQuestion } from \"../models/IQuestion\";\n\n\nexport const fetchTriviaCollectionAsync = createAsyncThunk(\n\t'trivia/fetchCollection',\n\tasync () => {\n\t\tconst response = await fetch('/questions.json');\n\t\treturn await response.json();\n\t}\n);\n\n\nexport const triviaSlice = createSlice({\n    name: 'trivia',\n    initialState: {\n        items: [],\n       \n        userAnwers: new Array(5),\n        index: 0\n    },\n    reducers: {\n        resetUserAnswer: (state) => {\n            state.userAnwers = new Array(5);\n        },\n\n        addUserAnswer: (state, action: PayloadAction<number>) => {\n            state.userAnwers[state.index] = action.payload;\n        },\n        changeIndex: (state, action: PayloadAction<number>) => {\n            state.index = action.payload;\n        },\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(\n                fetchTriviaCollectionAsync.fulfilled,\n                (state, action: PayloadAction<IQuestion[]>) => {\n                    state.items = action.payload;\n                }\n            );\n    },\n});\nexport  const {addUserAnswer, changeIndex, resetUserAnswer} = triviaSlice.actions;\nexport default triviaSlice.reducer;"]},"metadata":{},"sourceType":"module"}