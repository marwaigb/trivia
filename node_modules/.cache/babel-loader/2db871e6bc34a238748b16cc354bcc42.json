{"ast":null,"code":"var _jsxFileName = \"/Users/marwa/frontend/trivia/trivia-app/src/App.tsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TOTAL_QUESTIONS = 3;\n\nfunction App() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [loading, setLoading] = useState(false);\n  const [questions, setQuestions] = useState([]);\n  const [userAnswers, setUserAnswers] = useState(0);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(true);\n  const [questionNumber, setquestionNumber] = useState(0);\n  console.log(\"hi\" + questions[0]);\n\n  const Start = () => {\n    _s();\n\n    setLoading(false);\n    setGameOver(false);\n    useEffect(() => {\n      setLoading(true);\n      fetch(\"questions.json\").then(response => response.json()).then(question => {\n        setQuestions(question);\n      });\n    }, []);\n    setScore(0);\n    setUserAnswers(0);\n    setquestionNumber(0);\n  };\n\n  _s(Start, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  const nextQuestion = () => {\n    const nextQuestion = questionNumber + 1;\n\n    if (nextQuestion === TOTAL_QUESTIONS) {\n      setGameOver(true);\n    } else {\n      setquestionNumber(nextQuestion);\n    }\n  };\n\n  const checkAnswer = e => {\n    if (!gameOver) {\n      const answer = e.currentTarget.value;\n      const correct = questions[questionNumber].correct === answer;\n      if (correct) setScore(score + 1);\n      setUserAnswers(prev => prev + 1); //useranswers??\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trivia\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to Trivia\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), gameOver || userAnswers === TOTAL_QUESTIONS ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"start\",\n        onClick: Start,\n        children: \"Start Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this) : null, !gameOver ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"score\",\n        children: [\"Score: \", score, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 22\n      }, this) : null, loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading Questions...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(App, \"eoxZgOvMc+htk1RvQGbgjdzfhfM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/marwa/frontend/trivia/trivia-app/src/App.tsx"],"names":["React","useEffect","useState","TOTAL_QUESTIONS","App","loading","setLoading","questions","setQuestions","userAnswers","setUserAnswers","score","setScore","gameOver","setGameOver","questionNumber","setquestionNumber","console","log","Start","fetch","then","response","json","question","nextQuestion","checkAnswer","e","answer","currentTarget","value","correct","prev"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,WAAP;;AAGA,MAAMC,eAAe,GAAG,CAAxB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAAA;;AACb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAmB,EAAnB,CAA1C;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACa,cAAD,EAAiBC,iBAAjB,IAAsCd,QAAQ,CAAC,CAAD,CAApD;AAGAe,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAOX,SAAS,CAAC,CAAD,CAA5B;;AAEA,QAAMY,KAAK,GAAG,MAAM;AAAA;;AAClBb,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAQ,IAAAA,WAAW,CAAC,KAAD,CAAX;AAEAb,IAAAA,SAAS,CAAC,MAAM;AACdK,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAc,MAAAA,KAAK,CAAC,gBAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,QAAD,IAAc;AAClBhB,QAAAA,YAAY,CAACgB,QAAD,CAAZ;AACD,OAJH;AAKD,KAPQ,EAON,EAPM,CAAT;AASAZ,IAAAA,QAAQ,CAAC,CAAD,CAAR;AACAF,IAAAA,cAAc,CAAC,CAAD,CAAd;AACAM,IAAAA,iBAAiB,CAAC,CAAD,CAAjB;AACD,GAhBD;;AAXa,KAWPG,KAXO;;AA6Bb,QAAMM,YAAY,GAAG,MAAM;AACzB,UAAMA,YAAY,GAAGV,cAAc,GAAG,CAAtC;;AACA,QAAIU,YAAY,KAAKtB,eAArB,EAAsC;AACpCW,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KAFD,MAEO;AACLE,MAAAA,iBAAiB,CAACS,YAAD,CAAjB;AACD;AACF,GAPD;;AASA,QAAMC,WAAW,GAAIC,CAAD,IAA4C;AAC9D,QAAI,CAACd,QAAL,EAAe;AACb,YAAMe,MAAM,GAAGD,CAAC,CAACE,aAAF,CAAgBC,KAA/B;AACA,YAAMC,OAAO,GAAGxB,SAAS,CAACQ,cAAD,CAAT,CAA0BgB,OAA1B,KAAsCH,MAAtD;AACA,UAAIG,OAAJ,EAAanB,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACbD,MAAAA,cAAc,CAAEsB,IAAD,IAAUA,IAAI,GAAG,CAAlB,CAAd,CAJa,CAKb;AACD;AACF,GARD;;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAGGnB,QAAQ,IAAIJ,WAAW,KAAKN,eAA5B,gBACC;AAAQ,QAAA,SAAS,EAAC,OAAlB;AAA0B,QAAA,OAAO,EAAEgB,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,GAIG,IAPN,EASG,CAACN,QAAD,gBAAY;AAAG,QAAA,SAAS,EAAC,OAAb;AAAA,8BAA6BF,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,cAAZ,GAAuD,IAT1D,EAWGN,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXd;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;IAnEQD,G;;KAAAA,G;AAqET,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { IQuestion } from \"./models/IQuestion\";\n\nconst TOTAL_QUESTIONS = 3;\n\nfunction App() {\n  const [loading, setLoading] = useState(false);\n  const [questions, setQuestions] = useState<Array<IQuestion>>([]);\n  const [userAnswers, setUserAnswers] = useState(0);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(true);\n  const [questionNumber, setquestionNumber] = useState(0);\n\n  \n  console.log(\"hi\" + questions[0]);\n\n  const Start = () => {\n    setLoading(false);\n    setGameOver(false);\n\n    useEffect(() => {\n      setLoading(true);\n      fetch(\"questions.json\")\n        .then((response) => response.json())\n        .then((question) => {\n          setQuestions(question);\n        });\n    }, []);\n\n    setScore(0);\n    setUserAnswers(0);\n    setquestionNumber(0);\n  };\n\n  const nextQuestion = () => {\n    const nextQuestion = questionNumber + 1;\n    if (nextQuestion === TOTAL_QUESTIONS) {\n      setGameOver(true);\n    } else {\n      setquestionNumber(nextQuestion);\n    }\n  };\n\n  const checkAnswer = (e: React.MouseEvent<HTMLButtonElement>) => {\n    if (!gameOver) {\n      const answer = e.currentTarget.value;\n      const correct = questions[questionNumber].correct === answer;\n      if (correct) setScore(score + 1);\n      setUserAnswers((prev) => prev + 1);\n      //useranswers??\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"trivia\">\n        <h1>Welcome to Trivia</h1>\n\n        {gameOver || userAnswers === TOTAL_QUESTIONS ? (\n          <button className=\"start\" onClick={Start}>\n            Start Game\n          </button>\n        ) : null}\n\n        {!gameOver ? <p className=\"score\">Score: {score} </p> : null}\n\n        {loading && <p>Loading Questions...</p>}\n\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}