{"ast":null,"code":"var _jsxFileName = \"/Users/marwa/frontend/trivia/trivia-app/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport Question from \"./components/Question\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TOTAL_QUESTIONS = 5;\n\nfunction App() {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [questions, setQuestions] = useState([]);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(true);\n  const [questionNumber, setquestionNumber] = useState(0);\n\n  const start = async () => {\n    setGameOver(false);\n    setLoading(true);\n    await fetch(\"questions.json\").then(response => response.json()).then(Questions => {\n      setQuestions(Questions);\n    });\n    setLoading(false);\n    setScore(0);\n    setUserAnswers([]);\n    setquestionNumber(0);\n  };\n\n  const nextQuestion = () => {\n    const nextQuestion = questionNumber + 1;\n    setquestionNumber(nextQuestion);\n  };\n\n  const checkAnswer = e => {\n    if (!gameOver) {\n      const answer = e.currentTarget.value;\n      console.log(answer);\n      const correct = questions[questionNumber].correct === answer;\n      const answerObject = {\n        question: questions[questionNumber].question,\n        answer,\n        correct,\n        correctAnswer: questions[questionNumber].correct\n      };\n      const answers = [...userAnswers];\n      answers[questionNumber] = answerObject;\n      setUserAnswers(answers);\n    }\n  };\n\n  const endGame = () => {\n    setGameOver(true);\n    userAnswers.forEach(element => {\n      if (element.answer === element.correctAnswer) setScore(score + 1);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trivia\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to Trivia\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), gameOver ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"start\",\n          onClick: start,\n          children: \"Start Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"score\",\n          children: [\"Score: \", score, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : null, loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading Questions...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this), !loading && !gameOver && /*#__PURE__*/_jsxDEV(Question, {\n        questionNum: questionNumber + 1,\n        totalQuestions: TOTAL_QUESTIONS,\n        question: questions[questionNumber].question,\n        callback: checkAnswer,\n        answer_1: questions[questionNumber].answer1,\n        answer_2: questions[questionNumber].answer2,\n        answer_3: questions[questionNumber].answer3,\n        answer_4: questions[questionNumber].answer4,\n        userAnswer: userAnswers ? userAnswers[questionNumber] : undefined,\n        correctAns: questions[questionNumber].correct\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), !gameOver && !loading && userAnswers.length === questionNumber + 1 && questionNumber !== TOTAL_QUESTIONS - 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"next\",\n          onClick: nextQuestion,\n          children: \"Next Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)\n      }, void 0, false) : null, !gameOver && !loading && userAnswers.length === questionNumber + 1 && questionNumber === TOTAL_QUESTIONS - 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"end\",\n        onClick: endGame,\n        children: \"End\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 10\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"E98aLRfiPdN7JCSggbNJZnn6Kac=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/marwa/frontend/trivia/trivia-app/src/App.tsx"],"names":["React","useState","Question","TOTAL_QUESTIONS","App","loading","setLoading","questions","setQuestions","userAnswers","setUserAnswers","score","setScore","gameOver","setGameOver","questionNumber","setquestionNumber","start","fetch","then","response","json","Questions","nextQuestion","checkAnswer","e","answer","currentTarget","value","console","log","correct","answerObject","question","correctAnswer","answers","endGame","forEach","element","answer1","answer2","answer3","answer4","undefined","length"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { IQuestion } from \"./models/IQuestion\";\nimport Question from \"./components/Question\";\n\nconst TOTAL_QUESTIONS = 5;\n\nexport type AnswerObject = {\n  question: string;\n  answer: string;\n  correct: boolean;\n  correctAnswer: string;\n};\n\nfunction App() {\n  const [loading, setLoading] = useState(false);\n  const [questions, setQuestions] = useState<Array<IQuestion>>([]);\n  const [userAnswers, setUserAnswers] = useState<AnswerObject[]>([]);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(true);\n  const [questionNumber, setquestionNumber] = useState(0);\n\n  const start = async () => {\n    setGameOver(false);\n    setLoading(true);\n    await fetch(\"questions.json\")\n      .then((response) => response.json())\n      .then((Questions) => {\n        setQuestions(Questions);\n      });\n\n    setLoading(false);\n    setScore(0);\n    setUserAnswers([]);\n    setquestionNumber(0);\n  };\n\n  const nextQuestion = () => {\n    const nextQuestion = questionNumber + 1;\n      setquestionNumber(nextQuestion);\n  };\n\n  const checkAnswer = (e: React.MouseEvent<HTMLButtonElement>) => {\n    if (!gameOver) {\n      const answer = e.currentTarget.value;\n      console.log(answer);\n      const correct = questions[questionNumber].correct === answer;\n      const answerObject = {\n        question: questions[questionNumber].question,\n        answer,\n        correct,\n        correctAnswer: questions[questionNumber].correct,\n      };\n      const answers = [...userAnswers];\n      answers[questionNumber] = answerObject;\n      setUserAnswers(answers);\n    }\n  };\n\n  const endGame = () => {\n    setGameOver(true);\n    userAnswers.forEach(element => {\n      if(element.answer === element.correctAnswer)\n        setScore(score + 1);\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"trivia\">\n        <h1>Welcome to Trivia</h1>\n\n\n        {gameOver  ? (\n          <>\n            <button className=\"start\" onClick={start}>\n              Start Game\n            </button>\n            <h3 className=\"score\">Score: {score} </h3>\n          </>\n        ) : null}\n\n        {loading && <p>Loading Questions...</p>}\n\n        {!loading && !gameOver && (\n          <Question\n            questionNum={questionNumber + 1}\n            totalQuestions={TOTAL_QUESTIONS}\n            question={questions[questionNumber].question}\n            callback={checkAnswer}\n            answer_1={questions[questionNumber].answer1}\n            answer_2={questions[questionNumber].answer2}\n            answer_3={questions[questionNumber].answer3}\n            answer_4={questions[questionNumber].answer4}\n            userAnswer={userAnswers ? userAnswers[questionNumber] : undefined}\n            correctAns={questions[questionNumber].correct}\n          />\n        )}\n\n        {!gameOver &&\n        !loading &&\n        userAnswers.length === questionNumber + 1 &&\n        questionNumber !== TOTAL_QUESTIONS - 1 ? (\n          <>\n            <button className=\"next\" onClick={nextQuestion}>\n              Next Question\n            </button>\n       \n          </>\n        ) : null}\n\n{!gameOver &&\n        !loading &&\n        userAnswers.length === questionNumber + 1 &&\n        questionNumber === TOTAL_QUESTIONS - 1 ? (\n         <button className=\"end\" onClick={endGame}>\n         End \n        </button>\n        ) : null}\n\n\n      \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}